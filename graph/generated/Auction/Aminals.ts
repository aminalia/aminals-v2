// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AddSkillProposal extends ethereum.Event {
  get params(): AddSkillProposal__Params {
    return new AddSkillProposal__Params(this);
  }
}

export class AddSkillProposal__Params {
  _event: AddSkillProposal;

  constructor(event: AddSkillProposal) {
    this._event = event;
  }

  get aminalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get proposalId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get skillName(): string {
    return this._event.parameters[2].value.toString();
  }

  get skillAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class BreedAminal extends ethereum.Event {
  get params(): BreedAminal__Params {
    return new BreedAminal__Params(this);
  }
}

export class BreedAminal__Params {
  _event: BreedAminal;

  constructor(event: BreedAminal) {
    this._event = event;
  }

  get aminalOne(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get aminalTwo(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get auctionId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class FeedAminal extends ethereum.Event {
  get params(): FeedAminal__Params {
    return new FeedAminal__Params(this);
  }
}

export class FeedAminal__Params {
  _event: FeedAminal;

  constructor(event: FeedAminal) {
    this._event = event;
  }

  get aminalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get love(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get totalLove(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get energy(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RemoveSkillProposal extends ethereum.Event {
  get params(): RemoveSkillProposal__Params {
    return new RemoveSkillProposal__Params(this);
  }
}

export class RemoveSkillProposal__Params {
  _event: RemoveSkillProposal;

  constructor(event: RemoveSkillProposal) {
    this._event = event;
  }

  get aminalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get proposalId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get skillAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class SkillAdded extends ethereum.Event {
  get params(): SkillAdded__Params {
    return new SkillAdded__Params(this);
  }
}

export class SkillAdded__Params {
  _event: SkillAdded;

  constructor(event: SkillAdded) {
    this._event = event;
  }

  get aminalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get skillAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SkillRemoved extends ethereum.Event {
  get params(): SkillRemoved__Params {
    return new SkillRemoved__Params(this);
  }
}

export class SkillRemoved__Params {
  _event: SkillRemoved;

  constructor(event: SkillRemoved) {
    this._event = event;
  }

  get aminalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get skillAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SkillVote extends ethereum.Event {
  get params(): SkillVote__Params {
    return new SkillVote__Params(this);
  }
}

export class SkillVote__Params {
  _event: SkillVote;

  constructor(event: SkillVote) {
    this._event = event;
  }

  get aminalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get proposalId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get yesNo(): boolean {
    return this._event.parameters[3].value.toBoolean();
  }
}

export class SpawnAminal extends ethereum.Event {
  get params(): SpawnAminal__Params {
    return new SpawnAminal__Params(this);
  }
}

export class SpawnAminal__Params {
  _event: SpawnAminal;

  constructor(event: SpawnAminal) {
    this._event = event;
  }

  get aminalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get mom(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get dad(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get backId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get armId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get tailId(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get earsId(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get bodyId(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get faceId(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get mouthId(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get miscId(): BigInt {
    return this._event.parameters[10].value.toBigInt();
  }
}

export class Squeak extends ethereum.Event {
  get params(): Squeak__Params {
    return new Squeak__Params(this);
  }
}

export class Squeak__Params {
  _event: Squeak;

  constructor(event: Squeak) {
    this._event = event;
  }

  get aminalId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get energy(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get love(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class TraitAdded extends ethereum.Event {
  get params(): TraitAdded__Params {
    return new TraitAdded__Params(this);
  }
}

export class TraitAdded__Params {
  _event: TraitAdded;

  constructor(event: TraitAdded) {
    this._event = event;
  }

  get visualId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get catEnum(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get svg(): string {
    return this._event.parameters[2].value.toString();
  }

  get creator(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get id(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Aminals__aminalsResultVisualsStruct extends ethereum.Tuple {
  get backId(): BigInt {
    return this[0].toBigInt();
  }

  get armId(): BigInt {
    return this[1].toBigInt();
  }

  get tailId(): BigInt {
    return this[2].toBigInt();
  }

  get earsId(): BigInt {
    return this[3].toBigInt();
  }

  get bodyId(): BigInt {
    return this[4].toBigInt();
  }

  get faceId(): BigInt {
    return this[5].toBigInt();
  }

  get mouthId(): BigInt {
    return this[6].toBigInt();
  }

  get miscId(): BigInt {
    return this[7].toBigInt();
  }
}

export class Aminals__aminalsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: boolean;
  value5: boolean;
  value6: Aminals__aminalsResultVisualsStruct;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: boolean,
    value5: boolean,
    value6: Aminals__aminalsResultVisualsStruct,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    map.set("value5", ethereum.Value.fromBoolean(this.value5));
    map.set("value6", ethereum.Value.fromTuple(this.value6));
    return map;
  }

  getMomId(): BigInt {
    return this.value0;
  }

  getDadId(): BigInt {
    return this.value1;
  }

  getTotalLove(): BigInt {
    return this.value2;
  }

  getEnergy(): BigInt {
    return this.value3;
  }

  getBreeding(): boolean {
    return this.value4;
  }

  getExists(): boolean {
    return this.value5;
  }

  getVisuals(): Aminals__aminalsResultVisualsStruct {
    return this.value6;
  }
}

export class Aminals__armsResult {
  value0: string;
  value1: Address;

  constructor(value0: string, value1: Address) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    return map;
  }

  getSvg(): string {
    return this.value0;
  }

  getCreator(): Address {
    return this.value1;
  }
}

export class Aminals__backgroundsResult {
  value0: string;
  value1: Address;

  constructor(value0: string, value1: Address) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    return map;
  }

  getSvg(): string {
    return this.value0;
  }

  getCreator(): Address {
    return this.value1;
  }
}

export class Aminals__bodiesResult {
  value0: string;
  value1: Address;

  constructor(value0: string, value1: Address) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    return map;
  }

  getSvg(): string {
    return this.value0;
  }

  getCreator(): Address {
    return this.value1;
  }
}

export class Aminals__constructTokenURIInputParamsStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get description(): string {
    return this[1].toString();
  }

  get image(): string {
    return this[2].toString();
  }

  get attributes(): string {
    return this[3].toString();
  }
}

export class Aminals__earsResult {
  value0: string;
  value1: Address;

  constructor(value0: string, value1: Address) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    return map;
  }

  getSvg(): string {
    return this.value0;
  }

  getCreator(): Address {
    return this.value1;
  }
}

export class Aminals__facesResult {
  value0: string;
  value1: Address;

  constructor(value0: string, value1: Address) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    return map;
  }

  getSvg(): string {
    return this.value0;
  }

  getCreator(): Address {
    return this.value1;
  }
}

export class Aminals__getAminalVisualsByIDResultValue0Struct extends ethereum.Tuple {
  get backId(): BigInt {
    return this[0].toBigInt();
  }

  get armId(): BigInt {
    return this[1].toBigInt();
  }

  get tailId(): BigInt {
    return this[2].toBigInt();
  }

  get earsId(): BigInt {
    return this[3].toBigInt();
  }

  get bodyId(): BigInt {
    return this[4].toBigInt();
  }

  get faceId(): BigInt {
    return this[5].toBigInt();
  }

  get mouthId(): BigInt {
    return this[6].toBigInt();
  }

  get miscId(): BigInt {
    return this[7].toBigInt();
  }
}

export class Aminals__miscsResult {
  value0: string;
  value1: Address;

  constructor(value0: string, value1: Address) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    return map;
  }

  getSvg(): string {
    return this.value0;
  }

  getCreator(): Address {
    return this.value1;
  }
}

export class Aminals__mouthsResult {
  value0: string;
  value1: Address;

  constructor(value0: string, value1: Address) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    return map;
  }

  getSvg(): string {
    return this.value0;
  }

  getCreator(): Address {
    return this.value1;
  }
}

export class Aminals__tailsResult {
  value0: string;
  value1: Address;

  constructor(value0: string, value1: Address) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    return map;
  }

  getSvg(): string {
    return this.value0;
  }

  getCreator(): Address {
    return this.value1;
  }
}

export class Aminals extends ethereum.SmartContract {
  static bind(address: Address): Aminals {
    return new Aminals("Aminals", address);
  }

  addArm(arm: string): BigInt {
    let result = super.call("addArm", "addArm(string):(uint256)", [
      ethereum.Value.fromString(arm),
    ]);

    return result[0].toBigInt();
  }

  try_addArm(arm: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall("addArm", "addArm(string):(uint256)", [
      ethereum.Value.fromString(arm),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  addBackground(background: string): BigInt {
    let result = super.call(
      "addBackground",
      "addBackground(string):(uint256)",
      [ethereum.Value.fromString(background)],
    );

    return result[0].toBigInt();
  }

  try_addBackground(background: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "addBackground",
      "addBackground(string):(uint256)",
      [ethereum.Value.fromString(background)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  addBody(body: string): BigInt {
    let result = super.call("addBody", "addBody(string):(uint256)", [
      ethereum.Value.fromString(body),
    ]);

    return result[0].toBigInt();
  }

  try_addBody(body: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall("addBody", "addBody(string):(uint256)", [
      ethereum.Value.fromString(body),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  addEar(ear: string): BigInt {
    let result = super.call("addEar", "addEar(string):(uint256)", [
      ethereum.Value.fromString(ear),
    ]);

    return result[0].toBigInt();
  }

  try_addEar(ear: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall("addEar", "addEar(string):(uint256)", [
      ethereum.Value.fromString(ear),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  addFace(face: string): BigInt {
    let result = super.call("addFace", "addFace(string):(uint256)", [
      ethereum.Value.fromString(face),
    ]);

    return result[0].toBigInt();
  }

  try_addFace(face: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall("addFace", "addFace(string):(uint256)", [
      ethereum.Value.fromString(face),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  addMisc(misc: string): BigInt {
    let result = super.call("addMisc", "addMisc(string):(uint256)", [
      ethereum.Value.fromString(misc),
    ]);

    return result[0].toBigInt();
  }

  try_addMisc(misc: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall("addMisc", "addMisc(string):(uint256)", [
      ethereum.Value.fromString(misc),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  addMouth(mouth: string): BigInt {
    let result = super.call("addMouth", "addMouth(string):(uint256)", [
      ethereum.Value.fromString(mouth),
    ]);

    return result[0].toBigInt();
  }

  try_addMouth(mouth: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall("addMouth", "addMouth(string):(uint256)", [
      ethereum.Value.fromString(mouth),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  addTail(tail: string): BigInt {
    let result = super.call("addTail", "addTail(string):(uint256)", [
      ethereum.Value.fromString(tail),
    ]);

    return result[0].toBigInt();
  }

  try_addTail(tail: string): ethereum.CallResult<BigInt> {
    let result = super.tryCall("addTail", "addTail(string):(uint256)", [
      ethereum.Value.fromString(tail),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  aminals(aminalId: BigInt): Aminals__aminalsResult {
    let result = super.call(
      "aminals",
      "aminals(uint256):(uint256,uint256,uint256,uint256,bool,bool,(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(aminalId)],
    );

    return new Aminals__aminalsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBoolean(),
      result[5].toBoolean(),
      changetype<Aminals__aminalsResultVisualsStruct>(result[6].toTuple()),
    );
  }

  try_aminals(aminalId: BigInt): ethereum.CallResult<Aminals__aminalsResult> {
    let result = super.tryCall(
      "aminals",
      "aminals(uint256):(uint256,uint256,uint256,uint256,bool,bool,(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(aminalId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Aminals__aminalsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBoolean(),
        value[5].toBoolean(),
        changetype<Aminals__aminalsResultVisualsStruct>(value[6].toTuple()),
      ),
    );
  }

  arms(param0: BigInt): Aminals__armsResult {
    let result = super.call("arms", "arms(uint256):(string,address)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);

    return new Aminals__armsResult(result[0].toString(), result[1].toAddress());
  }

  try_arms(param0: BigInt): ethereum.CallResult<Aminals__armsResult> {
    let result = super.tryCall("arms", "arms(uint256):(string,address)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Aminals__armsResult(value[0].toString(), value[1].toAddress()),
    );
  }

  backgrounds(param0: BigInt): Aminals__backgroundsResult {
    let result = super.call(
      "backgrounds",
      "backgrounds(uint256):(string,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new Aminals__backgroundsResult(
      result[0].toString(),
      result[1].toAddress(),
    );
  }

  try_backgrounds(
    param0: BigInt,
  ): ethereum.CallResult<Aminals__backgroundsResult> {
    let result = super.tryCall(
      "backgrounds",
      "backgrounds(uint256):(string,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Aminals__backgroundsResult(value[0].toString(), value[1].toAddress()),
    );
  }

  balanceOf(owner: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner),
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(owner: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(owner),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  bodies(param0: BigInt): Aminals__bodiesResult {
    let result = super.call("bodies", "bodies(uint256):(string,address)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);

    return new Aminals__bodiesResult(
      result[0].toString(),
      result[1].toAddress(),
    );
  }

  try_bodies(param0: BigInt): ethereum.CallResult<Aminals__bodiesResult> {
    let result = super.tryCall("bodies", "bodies(uint256):(string,address)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Aminals__bodiesResult(value[0].toString(), value[1].toAddress()),
    );
  }

  constructTokenURI(
    params: Aminals__constructTokenURIInputParamsStruct,
  ): string {
    let result = super.call(
      "constructTokenURI",
      "constructTokenURI((string,string,string,string)):(string)",
      [ethereum.Value.fromTuple(params)],
    );

    return result[0].toString();
  }

  try_constructTokenURI(
    params: Aminals__constructTokenURIInputParamsStruct,
  ): ethereum.CallResult<string> {
    let result = super.tryCall(
      "constructTokenURI",
      "constructTokenURI((string,string,string,string)):(string)",
      [ethereum.Value.fromTuple(params)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  dataURI(tokenId: BigInt): string {
    let result = super.call("dataURI", "dataURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId),
    ]);

    return result[0].toString();
  }

  try_dataURI(tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("dataURI", "dataURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(tokenId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  ears(param0: BigInt): Aminals__earsResult {
    let result = super.call("ears", "ears(uint256):(string,address)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);

    return new Aminals__earsResult(result[0].toString(), result[1].toAddress());
  }

  try_ears(param0: BigInt): ethereum.CallResult<Aminals__earsResult> {
    let result = super.tryCall("ears", "ears(uint256):(string,address)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Aminals__earsResult(value[0].toString(), value[1].toAddress()),
    );
  }

  faces(param0: BigInt): Aminals__facesResult {
    let result = super.call("faces", "faces(uint256):(string,address)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);

    return new Aminals__facesResult(
      result[0].toString(),
      result[1].toAddress(),
    );
  }

  try_faces(param0: BigInt): ethereum.CallResult<Aminals__facesResult> {
    let result = super.tryCall("faces", "faces(uint256):(string,address)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Aminals__facesResult(value[0].toString(), value[1].toAddress()),
    );
  }

  generateAttributesList(tokenId: BigInt): string {
    let result = super.call(
      "generateAttributesList",
      "generateAttributesList(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)],
    );

    return result[0].toString();
  }

  try_generateAttributesList(tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall(
      "generateAttributesList",
      "generateAttributesList(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(tokenId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  genericDataURI(
    _name: string,
    _description: string,
    _image: string,
    _attributes: string,
  ): string {
    let result = super.call(
      "genericDataURI",
      "genericDataURI(string,string,string,string):(string)",
      [
        ethereum.Value.fromString(_name),
        ethereum.Value.fromString(_description),
        ethereum.Value.fromString(_image),
        ethereum.Value.fromString(_attributes),
      ],
    );

    return result[0].toString();
  }

  try_genericDataURI(
    _name: string,
    _description: string,
    _image: string,
    _attributes: string,
  ): ethereum.CallResult<string> {
    let result = super.tryCall(
      "genericDataURI",
      "genericDataURI(string,string,string,string):(string)",
      [
        ethereum.Value.fromString(_name),
        ethereum.Value.fromString(_description),
        ethereum.Value.fromString(_image),
        ethereum.Value.fromString(_attributes),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getAminalLoveByIdByUser(aminalID: BigInt, user: Address): BigInt {
    let result = super.call(
      "getAminalLoveByIdByUser",
      "getAminalLoveByIdByUser(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(aminalID),
        ethereum.Value.fromAddress(user),
      ],
    );

    return result[0].toBigInt();
  }

  try_getAminalLoveByIdByUser(
    aminalID: BigInt,
    user: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAminalLoveByIdByUser",
      "getAminalLoveByIdByUser(uint256,address):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(aminalID),
        ethereum.Value.fromAddress(user),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAminalLoveTotal(aminalID: BigInt): BigInt {
    let result = super.call(
      "getAminalLoveTotal",
      "getAminalLoveTotal(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(aminalID)],
    );

    return result[0].toBigInt();
  }

  try_getAminalLoveTotal(aminalID: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAminalLoveTotal",
      "getAminalLoveTotal(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(aminalID)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAminalVisualsByID(
    aminalID: BigInt,
  ): Aminals__getAminalVisualsByIDResultValue0Struct {
    let result = super.call(
      "getAminalVisualsByID",
      "getAminalVisualsByID(uint256):((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(aminalID)],
    );

    return changetype<Aminals__getAminalVisualsByIDResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getAminalVisualsByID(
    aminalID: BigInt,
  ): ethereum.CallResult<Aminals__getAminalVisualsByIDResultValue0Struct> {
    let result = super.tryCall(
      "getAminalVisualsByID",
      "getAminalVisualsByID(uint256):((uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(aminalID)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Aminals__getAminalVisualsByIDResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  getEnergy(aminalID: BigInt): BigInt {
    let result = super.call("getEnergy", "getEnergy(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(aminalID),
    ]);

    return result[0].toBigInt();
  }

  try_getEnergy(aminalID: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getEnergy", "getEnergy(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(aminalID),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getVisuals(category: BigInt, id: BigInt): string {
    let result = super.call(
      "getVisuals",
      "getVisuals(uint256,uint256):(string)",
      [
        ethereum.Value.fromUnsignedBigInt(category),
        ethereum.Value.fromUnsignedBigInt(id),
      ],
    );

    return result[0].toString();
  }

  try_getVisuals(category: BigInt, id: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getVisuals",
      "getVisuals(uint256,uint256):(string)",
      [
        ethereum.Value.fromUnsignedBigInt(category),
        ethereum.Value.fromUnsignedBigInt(id),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  lastAminalId(): BigInt {
    let result = super.call("lastAminalId", "lastAminalId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_lastAminalId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("lastAminalId", "lastAminalId():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  loveDrivenPrice(aminalId: BigInt, sender: Address): BigInt {
    let result = super.call(
      "loveDrivenPrice",
      "loveDrivenPrice(uint256,address):(uint128)",
      [
        ethereum.Value.fromUnsignedBigInt(aminalId),
        ethereum.Value.fromAddress(sender),
      ],
    );

    return result[0].toBigInt();
  }

  try_loveDrivenPrice(
    aminalId: BigInt,
    sender: Address,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "loveDrivenPrice",
      "loveDrivenPrice(uint256,address):(uint128)",
      [
        ethereum.Value.fromUnsignedBigInt(aminalId),
        ethereum.Value.fromAddress(sender),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  miscs(param0: BigInt): Aminals__miscsResult {
    let result = super.call("miscs", "miscs(uint256):(string,address)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);

    return new Aminals__miscsResult(
      result[0].toString(),
      result[1].toAddress(),
    );
  }

  try_miscs(param0: BigInt): ethereum.CallResult<Aminals__miscsResult> {
    let result = super.tryCall("miscs", "miscs(uint256):(string,address)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Aminals__miscsResult(value[0].toString(), value[1].toAddress()),
    );
  }

  mouths(param0: BigInt): Aminals__mouthsResult {
    let result = super.call("mouths", "mouths(uint256):(string,address)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);

    return new Aminals__mouthsResult(
      result[0].toString(),
      result[1].toAddress(),
    );
  }

  try_mouths(param0: BigInt): ethereum.CallResult<Aminals__mouthsResult> {
    let result = super.tryCall("mouths", "mouths(uint256):(string,address)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Aminals__mouthsResult(value[0].toString(), value[1].toAddress()),
    );
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ownerOf(id: BigInt): Address {
    let result = super.call("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(id),
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(id: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(id),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  proposals(): Address {
    let result = super.call("proposals", "proposals():(address)", []);

    return result[0].toAddress();
  }

  try_proposals(): ethereum.CallResult<Address> {
    let result = super.tryCall("proposals", "proposals():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  skills(param0: Address): boolean {
    let result = super.call("skills", "skills(address):(bool)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toBoolean();
  }

  try_skills(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("skills", "skills(address):(bool)", [
      ethereum.Value.fromAddress(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  spawnAminal(
    aminalOne: BigInt,
    aminalTwo: BigInt,
    backId: BigInt,
    armId: BigInt,
    tailId: BigInt,
    earsId: BigInt,
    bodyId: BigInt,
    faceId: BigInt,
    mouthId: BigInt,
    miscId: BigInt,
  ): BigInt {
    let result = super.call(
      "spawnAminal",
      "spawnAminal(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(aminalOne),
        ethereum.Value.fromUnsignedBigInt(aminalTwo),
        ethereum.Value.fromUnsignedBigInt(backId),
        ethereum.Value.fromUnsignedBigInt(armId),
        ethereum.Value.fromUnsignedBigInt(tailId),
        ethereum.Value.fromUnsignedBigInt(earsId),
        ethereum.Value.fromUnsignedBigInt(bodyId),
        ethereum.Value.fromUnsignedBigInt(faceId),
        ethereum.Value.fromUnsignedBigInt(mouthId),
        ethereum.Value.fromUnsignedBigInt(miscId),
      ],
    );

    return result[0].toBigInt();
  }

  try_spawnAminal(
    aminalOne: BigInt,
    aminalTwo: BigInt,
    backId: BigInt,
    armId: BigInt,
    tailId: BigInt,
    earsId: BigInt,
    bodyId: BigInt,
    faceId: BigInt,
    mouthId: BigInt,
    miscId: BigInt,
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "spawnAminal",
      "spawnAminal(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(aminalOne),
        ethereum.Value.fromUnsignedBigInt(aminalTwo),
        ethereum.Value.fromUnsignedBigInt(backId),
        ethereum.Value.fromUnsignedBigInt(armId),
        ethereum.Value.fromUnsignedBigInt(tailId),
        ethereum.Value.fromUnsignedBigInt(earsId),
        ethereum.Value.fromUnsignedBigInt(bodyId),
        ethereum.Value.fromUnsignedBigInt(faceId),
        ethereum.Value.fromUnsignedBigInt(mouthId),
        ethereum.Value.fromUnsignedBigInt(miscId),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  tails(param0: BigInt): Aminals__tailsResult {
    let result = super.call("tails", "tails(uint256):(string,address)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);

    return new Aminals__tailsResult(
      result[0].toString(),
      result[1].toAddress(),
    );
  }

  try_tails(param0: BigInt): ethereum.CallResult<Aminals__tailsResult> {
    let result = super.tryCall("tails", "tails(uint256):(string,address)", [
      ethereum.Value.fromUnsignedBigInt(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Aminals__tailsResult(value[0].toString(), value[1].toAddress()),
    );
  }

  tokenURI(aminalID: BigInt): string {
    let result = super.call("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(aminalID),
    ]);

    return result[0].toString();
  }

  try_tokenURI(aminalID: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall("tokenURI", "tokenURI(uint256):(string)", [
      ethereum.Value.fromUnsignedBigInt(aminalID),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  visualsAuction(): Address {
    let result = super.call("visualsAuction", "visualsAuction():(address)", []);

    return result[0].toAddress();
  }

  try_visualsAuction(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "visualsAuction",
      "visualsAuction():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _visualsAuction(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _aminalProposals(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class _voteCall extends ethereum.Call {
  get inputs(): _voteCall__Inputs {
    return new _voteCall__Inputs(this);
  }

  get outputs(): _voteCall__Outputs {
    return new _voteCall__Outputs(this);
  }
}

export class _voteCall__Inputs {
  _call: _voteCall;

  constructor(call: _voteCall) {
    this._call = call;
  }

  get aminalID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get proposalId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get yesNo(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class _voteCall__Outputs {
  _call: _voteCall;

  constructor(call: _voteCall) {
    this._call = call;
  }
}

export class AddArmCall extends ethereum.Call {
  get inputs(): AddArmCall__Inputs {
    return new AddArmCall__Inputs(this);
  }

  get outputs(): AddArmCall__Outputs {
    return new AddArmCall__Outputs(this);
  }
}

export class AddArmCall__Inputs {
  _call: AddArmCall;

  constructor(call: AddArmCall) {
    this._call = call;
  }

  get arm(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class AddArmCall__Outputs {
  _call: AddArmCall;

  constructor(call: AddArmCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class AddBackgroundCall extends ethereum.Call {
  get inputs(): AddBackgroundCall__Inputs {
    return new AddBackgroundCall__Inputs(this);
  }

  get outputs(): AddBackgroundCall__Outputs {
    return new AddBackgroundCall__Outputs(this);
  }
}

export class AddBackgroundCall__Inputs {
  _call: AddBackgroundCall;

  constructor(call: AddBackgroundCall) {
    this._call = call;
  }

  get background(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class AddBackgroundCall__Outputs {
  _call: AddBackgroundCall;

  constructor(call: AddBackgroundCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class AddBodyCall extends ethereum.Call {
  get inputs(): AddBodyCall__Inputs {
    return new AddBodyCall__Inputs(this);
  }

  get outputs(): AddBodyCall__Outputs {
    return new AddBodyCall__Outputs(this);
  }
}

export class AddBodyCall__Inputs {
  _call: AddBodyCall;

  constructor(call: AddBodyCall) {
    this._call = call;
  }

  get body(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class AddBodyCall__Outputs {
  _call: AddBodyCall;

  constructor(call: AddBodyCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class AddEarCall extends ethereum.Call {
  get inputs(): AddEarCall__Inputs {
    return new AddEarCall__Inputs(this);
  }

  get outputs(): AddEarCall__Outputs {
    return new AddEarCall__Outputs(this);
  }
}

export class AddEarCall__Inputs {
  _call: AddEarCall;

  constructor(call: AddEarCall) {
    this._call = call;
  }

  get ear(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class AddEarCall__Outputs {
  _call: AddEarCall;

  constructor(call: AddEarCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class AddFaceCall extends ethereum.Call {
  get inputs(): AddFaceCall__Inputs {
    return new AddFaceCall__Inputs(this);
  }

  get outputs(): AddFaceCall__Outputs {
    return new AddFaceCall__Outputs(this);
  }
}

export class AddFaceCall__Inputs {
  _call: AddFaceCall;

  constructor(call: AddFaceCall) {
    this._call = call;
  }

  get face(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class AddFaceCall__Outputs {
  _call: AddFaceCall;

  constructor(call: AddFaceCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class AddMiscCall extends ethereum.Call {
  get inputs(): AddMiscCall__Inputs {
    return new AddMiscCall__Inputs(this);
  }

  get outputs(): AddMiscCall__Outputs {
    return new AddMiscCall__Outputs(this);
  }
}

export class AddMiscCall__Inputs {
  _call: AddMiscCall;

  constructor(call: AddMiscCall) {
    this._call = call;
  }

  get misc(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class AddMiscCall__Outputs {
  _call: AddMiscCall;

  constructor(call: AddMiscCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class AddMouthCall extends ethereum.Call {
  get inputs(): AddMouthCall__Inputs {
    return new AddMouthCall__Inputs(this);
  }

  get outputs(): AddMouthCall__Outputs {
    return new AddMouthCall__Outputs(this);
  }
}

export class AddMouthCall__Inputs {
  _call: AddMouthCall;

  constructor(call: AddMouthCall) {
    this._call = call;
  }

  get mouth(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class AddMouthCall__Outputs {
  _call: AddMouthCall;

  constructor(call: AddMouthCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class AddTailCall extends ethereum.Call {
  get inputs(): AddTailCall__Inputs {
    return new AddTailCall__Inputs(this);
  }

  get outputs(): AddTailCall__Outputs {
    return new AddTailCall__Outputs(this);
  }
}

export class AddTailCall__Inputs {
  _call: AddTailCall;

  constructor(call: AddTailCall) {
    this._call = call;
  }

  get tail(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class AddTailCall__Outputs {
  _call: AddTailCall;

  constructor(call: AddTailCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get id(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class BreedWithCall extends ethereum.Call {
  get inputs(): BreedWithCall__Inputs {
    return new BreedWithCall__Inputs(this);
  }

  get outputs(): BreedWithCall__Outputs {
    return new BreedWithCall__Outputs(this);
  }
}

export class BreedWithCall__Inputs {
  _call: BreedWithCall;

  constructor(call: BreedWithCall) {
    this._call = call;
  }

  get aminalIdOne(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get aminalIdTwo(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BreedWithCall__Outputs {
  _call: BreedWithCall;

  constructor(call: BreedWithCall) {
    this._call = call;
  }

  get ret(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class CallSkillCall extends ethereum.Call {
  get inputs(): CallSkillCall__Inputs {
    return new CallSkillCall__Inputs(this);
  }

  get outputs(): CallSkillCall__Outputs {
    return new CallSkillCall__Outputs(this);
  }
}

export class CallSkillCall__Inputs {
  _call: CallSkillCall;

  constructor(call: CallSkillCall) {
    this._call = call;
  }

  get aminalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get skillAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class CallSkillCall__Outputs {
  _call: CallSkillCall;

  constructor(call: CallSkillCall) {
    this._call = call;
  }
}

export class CallSkillInternalCall extends ethereum.Call {
  get inputs(): CallSkillInternalCall__Inputs {
    return new CallSkillInternalCall__Inputs(this);
  }

  get outputs(): CallSkillInternalCall__Outputs {
    return new CallSkillInternalCall__Outputs(this);
  }
}

export class CallSkillInternalCall__Inputs {
  _call: CallSkillInternalCall;

  constructor(call: CallSkillInternalCall) {
    this._call = call;
  }

  get sender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get aminalId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get skillAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class CallSkillInternalCall__Outputs {
  _call: CallSkillInternalCall;

  constructor(call: CallSkillInternalCall) {
    this._call = call;
  }
}

export class DisableBreedableCall extends ethereum.Call {
  get inputs(): DisableBreedableCall__Inputs {
    return new DisableBreedableCall__Inputs(this);
  }

  get outputs(): DisableBreedableCall__Outputs {
    return new DisableBreedableCall__Outputs(this);
  }
}

export class DisableBreedableCall__Inputs {
  _call: DisableBreedableCall;

  constructor(call: DisableBreedableCall) {
    this._call = call;
  }

  get aminalIdOne(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get aminalIdTwo(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DisableBreedableCall__Outputs {
  _call: DisableBreedableCall;

  constructor(call: DisableBreedableCall) {
    this._call = call;
  }
}

export class FeedCall extends ethereum.Call {
  get inputs(): FeedCall__Inputs {
    return new FeedCall__Inputs(this);
  }

  get outputs(): FeedCall__Outputs {
    return new FeedCall__Outputs(this);
  }
}

export class FeedCall__Inputs {
  _call: FeedCall;

  constructor(call: FeedCall) {
    this._call = call;
  }

  get aminalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class FeedCall__Outputs {
  _call: FeedCall;

  constructor(call: FeedCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ProposeAddSkillCall extends ethereum.Call {
  get inputs(): ProposeAddSkillCall__Inputs {
    return new ProposeAddSkillCall__Inputs(this);
  }

  get outputs(): ProposeAddSkillCall__Outputs {
    return new ProposeAddSkillCall__Outputs(this);
  }
}

export class ProposeAddSkillCall__Inputs {
  _call: ProposeAddSkillCall;

  constructor(call: ProposeAddSkillCall) {
    this._call = call;
  }

  get aminalID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get skillName(): string {
    return this._call.inputValues[1].value.toString();
  }

  get skillAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ProposeAddSkillCall__Outputs {
  _call: ProposeAddSkillCall;

  constructor(call: ProposeAddSkillCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class ProposeRemoveSkillCall extends ethereum.Call {
  get inputs(): ProposeRemoveSkillCall__Inputs {
    return new ProposeRemoveSkillCall__Inputs(this);
  }

  get outputs(): ProposeRemoveSkillCall__Outputs {
    return new ProposeRemoveSkillCall__Outputs(this);
  }
}

export class ProposeRemoveSkillCall__Inputs {
  _call: ProposeRemoveSkillCall;

  constructor(call: ProposeRemoveSkillCall) {
    this._call = call;
  }

  get aminalID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get description(): string {
    return this._call.inputValues[1].value.toString();
  }

  get skillAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ProposeRemoveSkillCall__Outputs {
  _call: ProposeRemoveSkillCall;

  constructor(call: ProposeRemoveSkillCall) {
    this._call = call;
  }

  get proposalId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RemoveSkillCall extends ethereum.Call {
  get inputs(): RemoveSkillCall__Inputs {
    return new RemoveSkillCall__Inputs(this);
  }

  get outputs(): RemoveSkillCall__Outputs {
    return new RemoveSkillCall__Outputs(this);
  }
}

export class RemoveSkillCall__Inputs {
  _call: RemoveSkillCall;

  constructor(call: RemoveSkillCall) {
    this._call = call;
  }

  get faddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get aminalID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RemoveSkillCall__Outputs {
  _call: RemoveSkillCall;

  constructor(call: RemoveSkillCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SafeTransferFromCall extends ethereum.Call {
  get inputs(): SafeTransferFromCall__Inputs {
    return new SafeTransferFromCall__Inputs(this);
  }

  get outputs(): SafeTransferFromCall__Outputs {
    return new SafeTransferFromCall__Outputs(this);
  }
}

export class SafeTransferFromCall__Inputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get id(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SafeTransferFromCall__Outputs {
  _call: SafeTransferFromCall;

  constructor(call: SafeTransferFromCall) {
    this._call = call;
  }
}

export class SafeTransferFrom1Call extends ethereum.Call {
  get inputs(): SafeTransferFrom1Call__Inputs {
    return new SafeTransferFrom1Call__Inputs(this);
  }

  get outputs(): SafeTransferFrom1Call__Outputs {
    return new SafeTransferFrom1Call__Outputs(this);
  }
}

export class SafeTransferFrom1Call__Inputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get id(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class SafeTransferFrom1Call__Outputs {
  _call: SafeTransferFrom1Call;

  constructor(call: SafeTransferFrom1Call) {
    this._call = call;
  }
}

export class SetApprovalForAllCall extends ethereum.Call {
  get inputs(): SetApprovalForAllCall__Inputs {
    return new SetApprovalForAllCall__Inputs(this);
  }

  get outputs(): SetApprovalForAllCall__Outputs {
    return new SetApprovalForAllCall__Outputs(this);
  }
}

export class SetApprovalForAllCall__Inputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }

  get operator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get approved(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetApprovalForAllCall__Outputs {
  _call: SetApprovalForAllCall;

  constructor(call: SetApprovalForAllCall) {
    this._call = call;
  }
}

export class SetBreedingCall extends ethereum.Call {
  get inputs(): SetBreedingCall__Inputs {
    return new SetBreedingCall__Inputs(this);
  }

  get outputs(): SetBreedingCall__Outputs {
    return new SetBreedingCall__Outputs(this);
  }
}

export class SetBreedingCall__Inputs {
  _call: SetBreedingCall;

  constructor(call: SetBreedingCall) {
    this._call = call;
  }

  get aminalID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get breeding(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetBreedingCall__Outputs {
  _call: SetBreedingCall;

  constructor(call: SetBreedingCall) {
    this._call = call;
  }
}

export class SpawnAminalCall extends ethereum.Call {
  get inputs(): SpawnAminalCall__Inputs {
    return new SpawnAminalCall__Inputs(this);
  }

  get outputs(): SpawnAminalCall__Outputs {
    return new SpawnAminalCall__Outputs(this);
  }
}

export class SpawnAminalCall__Inputs {
  _call: SpawnAminalCall;

  constructor(call: SpawnAminalCall) {
    this._call = call;
  }

  get aminalOne(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get aminalTwo(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get backId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get armId(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get tailId(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get earsId(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get bodyId(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get faceId(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get mouthId(): BigInt {
    return this._call.inputValues[8].value.toBigInt();
  }

  get miscId(): BigInt {
    return this._call.inputValues[9].value.toBigInt();
  }
}

export class SpawnAminalCall__Outputs {
  _call: SpawnAminalCall;

  constructor(call: SpawnAminalCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class SpawnInitialAminalsCall extends ethereum.Call {
  get inputs(): SpawnInitialAminalsCall__Inputs {
    return new SpawnInitialAminalsCall__Inputs(this);
  }

  get outputs(): SpawnInitialAminalsCall__Outputs {
    return new SpawnInitialAminalsCall__Outputs(this);
  }
}

export class SpawnInitialAminalsCall__Inputs {
  _call: SpawnInitialAminalsCall;

  constructor(call: SpawnInitialAminalsCall) {
    this._call = call;
  }

  get _visuals(): Array<SpawnInitialAminalsCall_visualsStruct> {
    return this._call.inputValues[0].value.toTupleArray<SpawnInitialAminalsCall_visualsStruct>();
  }
}

export class SpawnInitialAminalsCall__Outputs {
  _call: SpawnInitialAminalsCall;

  constructor(call: SpawnInitialAminalsCall) {
    this._call = call;
  }
}

export class SpawnInitialAminalsCall_visualsStruct extends ethereum.Tuple {
  get backId(): BigInt {
    return this[0].toBigInt();
  }

  get armId(): BigInt {
    return this[1].toBigInt();
  }

  get tailId(): BigInt {
    return this[2].toBigInt();
  }

  get earsId(): BigInt {
    return this[3].toBigInt();
  }

  get bodyId(): BigInt {
    return this[4].toBigInt();
  }

  get faceId(): BigInt {
    return this[5].toBigInt();
  }

  get mouthId(): BigInt {
    return this[6].toBigInt();
  }

  get miscId(): BigInt {
    return this[7].toBigInt();
  }
}

export class SqueakCall extends ethereum.Call {
  get inputs(): SqueakCall__Inputs {
    return new SqueakCall__Inputs(this);
  }

  get outputs(): SqueakCall__Outputs {
    return new SqueakCall__Outputs(this);
  }
}

export class SqueakCall__Inputs {
  _call: SqueakCall;

  constructor(call: SqueakCall) {
    this._call = call;
  }

  get aminalId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SqueakCall__Outputs {
  _call: SqueakCall;

  constructor(call: SqueakCall) {
    this._call = call;
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get id(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class VoteSkillCall extends ethereum.Call {
  get inputs(): VoteSkillCall__Inputs {
    return new VoteSkillCall__Inputs(this);
  }

  get outputs(): VoteSkillCall__Outputs {
    return new VoteSkillCall__Outputs(this);
  }
}

export class VoteSkillCall__Inputs {
  _call: VoteSkillCall;

  constructor(call: VoteSkillCall) {
    this._call = call;
  }

  get aminalID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get proposalID(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get yesNo(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class VoteSkillCall__Outputs {
  _call: VoteSkillCall;

  constructor(call: VoteSkillCall) {
    this._call = call;
  }
}

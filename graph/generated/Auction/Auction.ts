// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class EndAuction extends ethereum.Event {
  get params(): EndAuction__Params {
    return new EndAuction__Params(this);
  }
}

export class EndAuction__Params {
  _event: EndAuction;

  constructor(event: EndAuction) {
    this._event = event;
  }

  get aminalIdOne(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get aminalIdTwo(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get childAminalId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get winningIds(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProposeVisual extends ethereum.Event {
  get params(): ProposeVisual__Params {
    return new ProposeVisual__Params(this);
  }
}

export class ProposeVisual__Params {
  _event: ProposeVisual;

  constructor(event: ProposeVisual) {
    this._event = event;
  }

  get auctionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get visualId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get catEnum(): i32 {
    return this._event.parameters[3].value.toI32();
  }
}

export class RemoveVisual extends ethereum.Event {
  get params(): RemoveVisual__Params {
    return new RemoveVisual__Params(this);
  }
}

export class RemoveVisual__Params {
  _event: RemoveVisual;

  constructor(event: RemoveVisual) {
    this._event = event;
  }

  get auctionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get visualId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get catEnum(): i32 {
    return this._event.parameters[3].value.toI32();
  }
}

export class StartAuction extends ethereum.Event {
  get params(): StartAuction__Params {
    return new StartAuction__Params(this);
  }
}

export class StartAuction__Params {
  _event: StartAuction;

  constructor(event: StartAuction) {
    this._event = event;
  }

  get aminalIdOne(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get aminalIdTwo(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get childAminalId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get totalLove(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get visualIds(): Array<Array<BigInt>> {
    return this._event.parameters[4].value.toBigIntMatrix();
  }
}

export class VisualsVote extends ethereum.Event {
  get params(): VisualsVote__Params {
    return new VisualsVote__Params(this);
  }
}

export class VisualsVote__Params {
  _event: VisualsVote;

  constructor(event: VisualsVote) {
    this._event = event;
  }

  get auctionId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get visualId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get catEnum(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get userLoveVote(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get totalLove(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class Auction__auctionsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: boolean;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromBoolean(this.value4));
    return map;
  }

  getAminalIdOne(): BigInt {
    return this.value0;
  }

  getAminalIdTwo(): BigInt {
    return this.value1;
  }

  getTotalLove(): BigInt {
    return this.value2;
  }

  getChildAminalId(): BigInt {
    return this.value3;
  }

  getEnded(): boolean {
    return this.value4;
  }
}

export class Auction__getAuctionByIDResultValue0Struct extends ethereum.Tuple {
  get aminalIdOne(): BigInt {
    return this[0].toBigInt();
  }

  get aminalIdTwo(): BigInt {
    return this[1].toBigInt();
  }

  get totalLove(): BigInt {
    return this[2].toBigInt();
  }

  get visualIds(): Array<Array<BigInt>> {
    return this[3].toBigIntMatrix();
  }

  get visualIdVotes(): Array<Array<BigInt>> {
    return this[4].toBigIntMatrix();
  }

  get visualNoVotes(): Array<Array<BigInt>> {
    return this[5].toBigIntMatrix();
  }

  get childAminalId(): BigInt {
    return this[6].toBigInt();
  }

  get winnerId(): Array<BigInt> {
    return this[7].toBigIntArray();
  }

  get ended(): boolean {
    return this[8].toBoolean();
  }
}

export class Auction extends ethereum.SmartContract {
  static bind(address: Address): Auction {
    return new Auction("Auction", address);
  }

  GENERATOR_SOURCE_BALANCE(): Address {
    let result = super.call(
      "GENERATOR_SOURCE_BALANCE",
      "GENERATOR_SOURCE_BALANCE():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_GENERATOR_SOURCE_BALANCE(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "GENERATOR_SOURCE_BALANCE",
      "GENERATOR_SOURCE_BALANCE():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  GENERATOR_SOURCE_CONTRACT(): Address {
    let result = super.call(
      "GENERATOR_SOURCE_CONTRACT",
      "GENERATOR_SOURCE_CONTRACT():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_GENERATOR_SOURCE_CONTRACT(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "GENERATOR_SOURCE_CONTRACT",
      "GENERATOR_SOURCE_CONTRACT():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  aminals(): Address {
    let result = super.call("aminals", "aminals():(address)", []);

    return result[0].toAddress();
  }

  try_aminals(): ethereum.CallResult<Address> {
    let result = super.tryCall("aminals", "aminals():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  auctionCnt(): BigInt {
    let result = super.call("auctionCnt", "auctionCnt():(uint256)", []);

    return result[0].toBigInt();
  }

  try_auctionCnt(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("auctionCnt", "auctionCnt():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  auctions(auctionId: BigInt): Auction__auctionsResult {
    let result = super.call(
      "auctions",
      "auctions(uint256):(uint256,uint256,uint256,uint256,bool)",
      [ethereum.Value.fromUnsignedBigInt(auctionId)]
    );

    return new Auction__auctionsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBoolean()
    );
  }

  try_auctions(
    auctionId: BigInt
  ): ethereum.CallResult<Auction__auctionsResult> {
    let result = super.tryCall(
      "auctions",
      "auctions(uint256):(uint256,uint256,uint256,uint256,bool)",
      [ethereum.Value.fromUnsignedBigInt(auctionId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Auction__auctionsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBoolean()
      )
    );
  }

  getAuctionByID(auctionID: BigInt): Auction__getAuctionByIDResultValue0Struct {
    let result = super.call(
      "getAuctionByID",
      "getAuctionByID(uint256):((uint256,uint256,uint256,uint256[8][10],uint256[8][10],uint256[8][10],uint256,uint256[8],bool))",
      [ethereum.Value.fromUnsignedBigInt(auctionID)]
    );

    return changetype<Auction__getAuctionByIDResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getAuctionByID(
    auctionID: BigInt
  ): ethereum.CallResult<Auction__getAuctionByIDResultValue0Struct> {
    let result = super.tryCall(
      "getAuctionByID",
      "getAuctionByID(uint256):((uint256,uint256,uint256,uint256[8][10],uint256[8][10],uint256[8][10],uint256,uint256[8],bool))",
      [ethereum.Value.fromUnsignedBigInt(auctionID)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Auction__getAuctionByIDResultValue0Struct>(value[0].toTuple())
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  startAuction(aminalIdOne: BigInt, aminalIdTwo: BigInt): BigInt {
    let result = super.call(
      "startAuction",
      "startAuction(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(aminalIdOne),
        ethereum.Value.fromUnsignedBigInt(aminalIdTwo)
      ]
    );

    return result[0].toBigInt();
  }

  try_startAuction(
    aminalIdOne: BigInt,
    aminalIdTwo: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "startAuction",
      "startAuction(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(aminalIdOne),
        ethereum.Value.fromUnsignedBigInt(aminalIdTwo)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _generatornessSourceContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _generatornessSourceBalance(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class EndAuctionCall extends ethereum.Call {
  get inputs(): EndAuctionCall__Inputs {
    return new EndAuctionCall__Inputs(this);
  }

  get outputs(): EndAuctionCall__Outputs {
    return new EndAuctionCall__Outputs(this);
  }
}

export class EndAuctionCall__Inputs {
  _call: EndAuctionCall;

  constructor(call: EndAuctionCall) {
    this._call = call;
  }

  get auctionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class EndAuctionCall__Outputs {
  _call: EndAuctionCall;

  constructor(call: EndAuctionCall) {
    this._call = call;
  }
}

export class ProposeVisualCall extends ethereum.Call {
  get inputs(): ProposeVisualCall__Inputs {
    return new ProposeVisualCall__Inputs(this);
  }

  get outputs(): ProposeVisualCall__Outputs {
    return new ProposeVisualCall__Outputs(this);
  }
}

export class ProposeVisualCall__Inputs {
  _call: ProposeVisualCall;

  constructor(call: ProposeVisualCall) {
    this._call = call;
  }

  get auctionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get catEnum(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get visualId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ProposeVisualCall__Outputs {
  _call: ProposeVisualCall;

  constructor(call: ProposeVisualCall) {
    this._call = call;
  }
}

export class RemoveVisualCall extends ethereum.Call {
  get inputs(): RemoveVisualCall__Inputs {
    return new RemoveVisualCall__Inputs(this);
  }

  get outputs(): RemoveVisualCall__Outputs {
    return new RemoveVisualCall__Outputs(this);
  }
}

export class RemoveVisualCall__Inputs {
  _call: RemoveVisualCall;

  constructor(call: RemoveVisualCall) {
    this._call = call;
  }

  get auctionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get catEnum(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get visualId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class RemoveVisualCall__Outputs {
  _call: RemoveVisualCall;

  constructor(call: RemoveVisualCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetupCall extends ethereum.Call {
  get inputs(): SetupCall__Inputs {
    return new SetupCall__Inputs(this);
  }

  get outputs(): SetupCall__Outputs {
    return new SetupCall__Outputs(this);
  }
}

export class SetupCall__Inputs {
  _call: SetupCall;

  constructor(call: SetupCall) {
    this._call = call;
  }

  get _aminals(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetupCall__Outputs {
  _call: SetupCall;

  constructor(call: SetupCall) {
    this._call = call;
  }
}

export class StartAuctionCall extends ethereum.Call {
  get inputs(): StartAuctionCall__Inputs {
    return new StartAuctionCall__Inputs(this);
  }

  get outputs(): StartAuctionCall__Outputs {
    return new StartAuctionCall__Outputs(this);
  }
}

export class StartAuctionCall__Inputs {
  _call: StartAuctionCall;

  constructor(call: StartAuctionCall) {
    this._call = call;
  }

  get aminalIdOne(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get aminalIdTwo(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class StartAuctionCall__Outputs {
  _call: StartAuctionCall;

  constructor(call: StartAuctionCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class VoteVisualCall extends ethereum.Call {
  get inputs(): VoteVisualCall__Inputs {
    return new VoteVisualCall__Inputs(this);
  }

  get outputs(): VoteVisualCall__Outputs {
    return new VoteVisualCall__Outputs(this);
  }
}

export class VoteVisualCall__Inputs {
  _call: VoteVisualCall;

  constructor(call: VoteVisualCall) {
    this._call = call;
  }

  get auctionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get catEnum(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get id(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class VoteVisualCall__Outputs {
  _call: VoteVisualCall;

  constructor(call: VoteVisualCall) {
    this._call = call;
  }
}
